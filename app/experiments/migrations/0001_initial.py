# Generated by Django 4.1.4 on 2022-12-16 16:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LimeGroup',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('sid', models.IntegerField()),
                ('group_order', models.IntegerField()),
                ('randomization_group', models.CharField(max_length=20)),
                ('grelevance', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lime_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LimeGroupL10N',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('language', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'lime_group_l10ns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LimeQuestion',
            fields=[
                ('qid', models.AutoField(primary_key=True, serialize=False)),
                ('parent_qid', models.IntegerField()),
                ('sid', models.IntegerField()),
                ('gid', models.IntegerField()),
                ('type', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=20)),
                ('preg', models.TextField(blank=True, null=True)),
                ('other', models.CharField(max_length=1)),
                ('mandatory', models.CharField(blank=True, max_length=1, null=True)),
                ('encrypted', models.CharField(blank=True, max_length=1, null=True)),
                ('question_order', models.IntegerField()),
                ('scale_id', models.IntegerField()),
                ('same_default', models.IntegerField()),
                ('relevance', models.TextField(blank=True, null=True)),
                ('question_theme_name', models.CharField(blank=True, max_length=150, null=True)),
                ('modulename', models.CharField(blank=True, max_length=255, null=True)),
                ('same_script', models.IntegerField()),
            ],
            options={
                'db_table': 'lime_questions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LimeQuestionL10N',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('help', models.TextField(blank=True, null=True)),
                ('script', models.TextField(blank=True, null=True)),
                ('language', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'lime_question_l10ns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LimeSurvey',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('owner_id', models.IntegerField()),
                ('gsid', models.IntegerField(blank=True, null=True)),
                ('admin', models.CharField(blank=True, max_length=50, null=True)),
                ('active', models.CharField(max_length=1)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('adminemail', models.CharField(blank=True, max_length=254, null=True)),
                ('anonymized', models.CharField(max_length=1)),
                ('faxto', models.CharField(blank=True, max_length=20, null=True)),
                ('format', models.CharField(blank=True, max_length=1, null=True)),
                ('savetimings', models.CharField(max_length=1)),
                ('template', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('additional_languages', models.TextField(blank=True, null=True)),
                ('datestamp', models.CharField(max_length=1)),
                ('usecookie', models.CharField(max_length=1)),
                ('allowregister', models.CharField(max_length=1)),
                ('allowsave', models.CharField(max_length=1)),
                ('autonumber_start', models.IntegerField()),
                ('autoredirect', models.CharField(max_length=1)),
                ('allowprev', models.CharField(max_length=1)),
                ('printanswers', models.CharField(max_length=1)),
                ('ipaddr', models.CharField(max_length=1)),
                ('ipanonymize', models.CharField(max_length=1)),
                ('refurl', models.CharField(max_length=1)),
                ('datecreated', models.DateTimeField(blank=True, null=True)),
                ('showsurveypolicynotice', models.IntegerField(blank=True, null=True)),
                ('publicstatistics', models.CharField(max_length=1)),
                ('publicgraphs', models.CharField(max_length=1)),
                ('listpublic', models.CharField(max_length=1)),
                ('htmlemail', models.CharField(max_length=1)),
                ('sendconfirmation', models.CharField(max_length=1)),
                ('tokenanswerspersistence', models.CharField(max_length=1)),
                ('assessments', models.CharField(max_length=1)),
                ('usecaptcha', models.CharField(max_length=1)),
                ('usetokens', models.CharField(max_length=1)),
                ('bounce_email', models.CharField(blank=True, max_length=254, null=True)),
                ('attributedescriptions', models.TextField(blank=True, null=True)),
                ('emailresponseto', models.TextField(blank=True, null=True)),
                ('emailnotificationto', models.TextField(blank=True, null=True)),
                ('tokenlength', models.IntegerField()),
                ('showxquestions', models.CharField(blank=True, max_length=1, null=True)),
                ('showgroupinfo', models.CharField(blank=True, max_length=1, null=True)),
                ('shownoanswer', models.CharField(blank=True, max_length=1, null=True)),
                ('showqnumcode', models.CharField(blank=True, max_length=1, null=True)),
                ('bouncetime', models.IntegerField(blank=True, null=True)),
                ('bounceprocessing', models.CharField(blank=True, max_length=1, null=True)),
                ('bounceaccounttype', models.CharField(blank=True, max_length=4, null=True)),
                ('bounceaccounthost', models.CharField(blank=True, max_length=200, null=True)),
                ('bounceaccountpass', models.TextField(blank=True, null=True)),
                ('bounceaccountencryption', models.CharField(blank=True, max_length=3, null=True)),
                ('bounceaccountuser', models.CharField(blank=True, max_length=200, null=True)),
                ('showwelcome', models.CharField(blank=True, max_length=1, null=True)),
                ('showprogress', models.CharField(blank=True, max_length=1, null=True)),
                ('questionindex', models.IntegerField()),
                ('navigationdelay', models.IntegerField()),
                ('nokeyboard', models.CharField(blank=True, max_length=1, null=True)),
                ('alloweditaftercompletion', models.CharField(blank=True, max_length=1, null=True)),
                ('googleanalyticsstyle', models.CharField(blank=True, max_length=1, null=True)),
                ('googleanalyticsapikey', models.CharField(blank=True, max_length=25, null=True)),
                ('tokenencryptionoptions', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lime_surveys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LimeSurveyLanguagesettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surveyls_language', models.CharField(max_length=45)),
                ('surveyls_title', models.CharField(max_length=200)),
                ('surveyls_description', models.TextField(blank=True, null=True)),
                ('surveyls_welcometext', models.TextField(blank=True, null=True)),
                ('surveyls_endtext', models.TextField(blank=True, null=True)),
                ('surveyls_policy_notice', models.TextField(blank=True, null=True)),
                ('surveyls_policy_error', models.TextField(blank=True, null=True)),
                ('surveyls_policy_notice_label', models.CharField(blank=True, max_length=192, null=True)),
                ('surveyls_url', models.TextField(blank=True, null=True)),
                ('surveyls_urldescription', models.CharField(blank=True, max_length=255, null=True)),
                ('surveyls_email_invite_subj', models.CharField(blank=True, max_length=255, null=True)),
                ('surveyls_email_invite', models.TextField(blank=True, null=True)),
                ('surveyls_email_remind_subj', models.CharField(blank=True, max_length=255, null=True)),
                ('surveyls_email_remind', models.TextField(blank=True, null=True)),
                ('surveyls_email_register_subj', models.CharField(blank=True, max_length=255, null=True)),
                ('surveyls_email_register', models.TextField(blank=True, null=True)),
                ('surveyls_email_confirm_subj', models.CharField(blank=True, max_length=255, null=True)),
                ('surveyls_email_confirm', models.TextField(blank=True, null=True)),
                ('surveyls_dateformat', models.IntegerField()),
                ('surveyls_attributecaptions', models.TextField(blank=True, null=True)),
                ('email_admin_notification_subj', models.CharField(blank=True, max_length=255, null=True)),
                ('email_admin_notification', models.TextField(blank=True, null=True)),
                ('email_admin_responses_subj', models.CharField(blank=True, max_length=255, null=True)),
                ('email_admin_responses', models.TextField(blank=True, null=True)),
                ('surveyls_numberformat', models.IntegerField()),
                ('attachments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lime_surveys_languagesettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Extended name of the type of data to be collected (e.g., Mobility data)', max_length=255)),
                ('variable_name', models.CharField(help_text='Name of the variable showing what type of data is used (e.g., mobility_data)', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Title of the experiment', max_length=255)),
                ('description', models.TextField(help_text='Description of the experiment')),
                ('publish', models.BooleanField(help_text='Select this to make this experiment available to everyone, otherwise it will be accessible only in test mode')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the group', max_length=255)),
                ('conditions_to_belong', models.CharField(help_text='Summarization of the conditions to be included in this group (e.g., age > 40', max_length=255)),
                ('parent_experiment', models.ForeignKey(help_text='The experiment to which this group belongs', on_delete=django.db.models.deletion.CASCADE, to='experiments.experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='For example "Smart Living Lab"', max_length=255)),
                ('city', models.CharField(help_text='For example "Fribourg"', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment', models.ForeignKey(help_text='The experiment where this survey will be executed', on_delete=django.db.models.deletion.CASCADE, to='experiments.experiment')),
                ('target_groups', models.ManyToManyField(to='experiments.group')),
            ],
        ),
        migrations.CreateModel(
            name='PeriodicSurveyProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_on', models.DateTimeField(help_text='Date when to start sending out surveys')),
                ('end_on', models.DateTimeField(help_text='Date when to stop sending out surveys')),
                ('repeats', models.CharField(choices=[('daily', 'daily'), ('weekly', 'weekly'), ('monthly', 'monthly')], help_text='How often this survey is repeated', max_length=15)),
                ('every', models.SmallIntegerField()),
                ('on_day', models.SmallIntegerField()),
                ('reminder', models.BooleanField(default=False, help_text='If people do not answer, send a reminder after 3 days')),
                ('parent_survey', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='experiments.surveyproperties')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_key', models.CharField(help_text='The unique user identifier, generated with persnal information', max_length=20)),
                ('experiment', models.ManyToManyField(help_text='The list of experiments where this participant is enrolled', to='experiments.experiment')),
                ('group', models.ManyToManyField(help_text='The groups to which this participant belongs', to='experiments.group')),
            ],
        ),
        migrations.CreateModel(
            name='OnModeChangeSurveyProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_event', models.CharField(choices=[('STILL', 'still'), ('WALKING', 'walking'), ('RUNNING', 'running'), ('CYCLING', 'cycling'), ('TRAIN', 'train'), ('CAR', 'car'), ('BUS', 'bus'), ('TRAM', 'tram'), ('ANY', 'any')], help_text='The activity before the mode of transport change', max_length=20)),
                ('to_event', models.CharField(choices=[('STILL', 'still'), ('WALKING', 'walking'), ('RUNNING', 'running'), ('CYCLING', 'cycling'), ('TRAIN', 'train'), ('CAR', 'car'), ('BUS', 'bus'), ('TRAM', 'tram'), ('ANY', 'any')], help_text='The activity to which the mode of transport changed', max_length=20)),
                ('parent_survey', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='experiments.surveyproperties')),
            ],
        ),
        migrations.CreateModel(
            name='OnDemandSurveyProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder', models.BooleanField(default=False, help_text='If people do not answer, send a reminder after 3 days')),
                ('parent_survey', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='experiments.surveyproperties')),
            ],
        ),
        migrations.AddField(
            model_name='experiment',
            name='location',
            field=models.ManyToManyField(help_text='The locations where this experiment is taking place', to='experiments.location'),
        ),
        migrations.CreateModel(
            name='CollectedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='Description of the reason for which collecting this data is important')),
                ('data_type', models.ForeignKey(help_text='The type of data to be collected', on_delete=django.db.models.deletion.CASCADE, to='experiments.datatype')),
                ('experiment', models.ForeignKey(help_text='The experiment for which to collect this data', on_delete=django.db.models.deletion.CASCADE, to='experiments.experiment')),
            ],
        ),
    ]
